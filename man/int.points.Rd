% Generated by roxygen2 (4.1.1): do not edit by hand
% Please edit documentation in R/integration.R
\name{int.points}
\alias{int.points}
\title{Line transect integration}
\usage{
int.points(data, on = "transect", line.split = FALSE, mesh = data$mesh,
  mesh.split = FALSE, mesh.coords = data$mesh.coords,
  geometry = data$geometry, length.scheme = "gaussian", n.length = 1,
  distance.scheme = "equidistant", n.distance = 5,
  distance.truncation = 1, fake.distance = FALSE, projection = NULL,
  group.by = NULL)
}
\arguments{
\item{data}{Either a dsdata/etpdata data set (e.g. whales) or a data.frame describing effort data}

\item{on}{Either "transect" or "segment". This determines on which of these the integration is based on. Alternatively a two column index matrix, first column: column index of transect start points in effort data, second column: column index of transect end points in effort data}

\item{line.split}{TRUE or FALSE, determines if lines that cross mesh edged should be splitted}

\item{mesh}{Mesh used to construct the integration points. By default the mesh of the given data set.}

\item{mesh.split}{Split mesh triangles into four sub-triangles for refined integration.}

\item{mesh.coords}{Character description of the mesh coordinates, e.g. c("lon","lat")}

\item{geometry}{Either "geo" (geographic)  or "euc" (Euclidean)}

\item{length.scheme}{Integration scheme along the line (transect/segment)}

\item{n.length}{Number of integration points along the line}

\item{distance.scheme}{Integration scheme along perpendicular distance}

\item{n.distance}{Number of integration points perpendicular distance}

\item{distance.truncation}{Truncation for perpendicular distance (i.e. integration limit)}

\item{fake.distance}{Wether or not integration points stay on the transect line and distances are faked.}

\item{projection}{Type of projection. Currently only "linear" works.}

\item{group.by}{Create independent integration points for sub-groups of the data, e.g. group.by=c("year","month")}
}
\value{
List with integration poins (ips), weights (w) and weights including line length (wl)
}
\description{
Creates a set of integration points with weights from a \link{dsdata} structure.
The integration points can be based on the transect lines or the line segments of the survey (parameter "on").
By default, the integration points are arranged on a grid and their number in direction of the transect and perpendicular
to the transect are given by the parameters n.length and n.distance. The boundary of the integration in perpendicular
direction is given by distance.truncation. Since transect lines can be long compared to the mesh that is used to model
the data it can be useful to set the parameter line.split to TRUE. This means that transect lines / segments are split
into parts at the edges of the mesh before the integration points are constructed (for each of these parts). The
mesh that is used for this procedure is (by default) the mesh of the data set (data$mesh). However, it can by replaced
by a mesh provided as a parameter. Additionaly, the given mesh can automatically be refined (mesh.refine) if a denser set
of integration points is required. The latter also holds for integration points constructed using the option
"projection = TRUE". Hereby, after their contruction, integration points are projected onto points at the mesh vertices.
}
\author{
Fabian E. Bachl <\email{f.e.bachl@bath.ac.uk}>
}

