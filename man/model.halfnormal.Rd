% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/model.R
\name{model.halfnormal}
\alias{model.halfnormal}
\title{Half-normal detection function}
\usage{
model.halfnormal(data = NULL, truncation = NULL, constrained = TRUE,
  colname = "distance", effect = "nhsd")
}
\arguments{
\item{data}{\link{dsdata} data set. Used to determine distance truncation (if not provided)}

\item{truncation}{Distance to truncate at. Currently unused but passed on the the formula environment for later usage.}

\item{constrained}{If set to false a non-constrained linear effect is used for estimating the detection function. Handy for debugging.}

\item{colname}{Effort data column to use for the covariate extraction. Default: "distance"}

\item{effect}{Character setting the name of the effect in the model. Default: "nhsd" ("negative half squared distance")}
}
\value{
A \link{model}
}
\description{
Construct a half-normal detection function \link{model}
The log-likelihood of this model is
\deqn{log p(z) = -0.5 * q * z^2}
}
\details{
with precision parameter q and distance z. Internally, it is represented by the \link{formula}
 ~ . + f(nhsd, model = 'clinear', range = c(0, Inf), hyper = list(beta = list(initial = 0, param = c(0,0.1))))

Hence, the precision effect 'nhsd' is obtained from a contrained linear INLA model. The covariate used for this
model is:

nhsd = function(X) { return(-0.5*scale*X[,colname]^2) },
 
that is, nhsd is half of the negative squared distance of an observation/integration point. 
The parameter 'scale' is currently set to 'truncation'. If truncation is NULL, scale is set to 1.
}

