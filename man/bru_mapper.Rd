% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/effect.R
\name{bru_mapper}
\alias{bru_mapper}
\alias{ibm_n}
\alias{ibm_values}
\alias{ibm_amatrix}
\alias{bru_mapper.default}
\alias{bru_mapper.inla.mesh}
\alias{bru_mapper.inla.mesh.1d}
\alias{bru_mapper_index}
\alias{bru_mapper_linear}
\alias{bru_mapper_factor}
\alias{bru_mapper_offset}
\alias{bru_mapper_multi}
\title{Methods for \code{bru_mapper} objects}
\usage{
bru_mapper(...)

ibm_n(mapper, ...)

ibm_values(mapper, ...)

ibm_amatrix(mapper, input, ...)

\method{bru_mapper}{default}(
  mapper,
  ibm_n = NULL,
  ibm_values = NULL,
  ibm_amatrix = NULL,
  new_class = NULL,
  ...
)

\method{bru_mapper}{inla.mesh}(mesh, ...)

\method{bru_mapper}{inla.mesh.1d}(mesh, indexed = NULL, ...)

bru_mapper_index(n = 1L, ...)

bru_mapper_linear(...)

bru_mapper_factor(values, factor_mapping, ...)

bru_mapper_offset(...)

bru_mapper_multi(mappers, ...)
}
\arguments{
\item{\dots}{Arguments passed on to other methods}

\item{mapper}{A mapper S3 object, normally inheriting from \code{bru_mapper}}

\item{input}{The values for which to produce a mapping matrix}

\item{ibm_n}{An \code{ibm_n} method function}

\item{ibm_values}{An \code{ibm_values} method function}

\item{ibm_amatrix}{An \code{ibm_amatrix} method function}

\item{new_class}{If non-\code{NULL}, this is added at the front of the class definition}

\item{mesh}{An \code{inla.mesh.1d} or \code{inla.mesh.2d} object to use as a mapper}

\item{indexed}{logical; If \code{TRUE}, the \code{ibm_values()} output will be the
integer indexing sequence for the latent variables (needed for \code{spde} models).
If \code{FALSE}, the knot
locations are returned (useful as an interpolator for \code{rw2} models
and similar).
Default: \code{NULL}, to force user specification of this parameter}

\item{n}{Size of a model for \code{bru_mapper_index}}

\item{values}{Input values calculated by \code{\link[=input_eval.bru_input]{input_eval.bru_input()}}}

\item{factor_mapping}{character; selects the type of factor mapping.
\itemize{
\item \code{'contrast'} for leaving out the first factor level.
\item \code{'full'} for keeping all levels.
}}

\item{mappers}{A list of \code{bru_mapper} objects}
}
\description{
Methods for \code{bru_mapper} objects
}
\details{
\itemize{
\item \code{bru_mapper} Generic mapper S3 constructor. See below for details of the
default constructor that can be used to define new mappers in user code.
}

\itemize{
\item \code{ibm_n} Generic. Implementations must return the size of the latent vector
being mapped to.
}

\itemize{
\item \code{ibm_values} Generic. Implementations must return a vector that
is interpretable by an \code{INLA::f(..., values = ...)} specification, and
has length \code{\link[=ibm_n]{ibm_n()}}.
}

\itemize{
\item \code{ibm_amatrix} Generic.
Implementations must return a (sparse) matrix of size \code{NROW(input)}
(except for the \code{bru_mapper_multi} method)
by \code{ibm_n(mapper)}
}

\itemize{
\item \code{bru_mapper.default} adds the "bru_mapper" class and \code{new_class}
to an object,
and optionally adds the mapper method functions as elements. This is
currently needed for user-defined mapper object classes to avoid namespace
issues.
}

\itemize{
\item \code{bru_mapper_multi} constructs a kronecker product mapping
}
}
\seealso{
\link{bru_mapper_methods} for specific method implementations.
}
