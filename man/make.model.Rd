% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/model.R
\name{make.model}
\alias{make.model}
\title{Create an inlabru \link{model} from a formula}
\usage{
make.model(fml)
}
\arguments{
\item{fml}{A formula}
}
\value{
A \link{model} object
}
\description{
The \link{inlabru} syntax for model forulae is different from what \link{inla} considers a valid.
In inla most of the effects are defined by adding an f(...) expression to the formula. 
In \link{inlabru} the f is replaced by an arbitrary (exception: 'offset') string that will
determine the label of the effect. For instance
}
\details{
\code{y ~ f(myspde, ...)}

is equivalent to

\code{y ~ myspde(...)}

A disadvantage of the inla way is that there is no clear separation between the name of the covariate
and the label of the effect. Furthermore, for some models like SPDE it is much more natural to
use spatial coordinates as covariates rather than an index into the SPDE vertices. For this purpose
\link{inlabru} provides the new \code{map} agument. For convenience, the map argument ca be used
like the first argument of the f function, e.g.

\code{y ~ f(temperature, model = 'fixed')}

is equivalent to

\code{y ~ temperature(map = temperature, model = fixed)}
as well as
\code{y ~ temperature(model = fixed)}

On the other hand, map can also be a function mapping, e.g the \link{coordinates} function of the
\link{sp} package :

\code{y ~ mySPDE(map = coordinates, ...)}

Morevover, \code{map} can be any expression that evaluate within your data as an environment.
For instance, if your data has columns 'a' and 'b', you can create a fixed effect of 'a+b' by
setting \code{map} in the following way:

\code{y ~ myEffect(map = sin(a+b))}
}

